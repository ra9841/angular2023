{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(httpClient, router, route) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.route = route;\n    this.message = \"\";\n  }\n  ngOnInit() {}\n  validate(pusername, ppassword) {\n    const reqeuestBody = {\n      username: pusername.value,\n      password: ppassword.value\n    };\n    //HERE WE ARE MAKING REST CALL\n    let response = this.httpClient.post(\"http://localhost:8080/v2/auth\", reqeuestBody);\n    response.subscribe(data => {\n      console.log(data);\n      if (data.authorization !== null) {\n        //   localStorage.setItem('Authorization',data.authorization);\n        sessionStorage.setItem('Authorization', data.authorization);\n        this.router.navigate(['home']);\n      }\n    }, error => {\n      console.log(error);\n      if (error.status === 401) {\n        this.message = \"Hey! username and password is not correct!\";\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 26,\n  vars: 1,\n  consts: [[1, \"container\"], [\"src\", \"https://cdn-icons-png.flaticon.com/512/295/295128.png\", 2, \"height\", \"180px\"], [2, \"color\", \"red\", \"font-weight\", \"bold\"], [1, \"form-group\", 2, \"width\", \"50%\"], [\"type\", \"text\", \"name\", \"username\", 1, \"form-control\"], [\"pusername\", \"\"], [\"type\", \"password\", \"name\", \"password\", 1, \"form-control\"], [\"ppassword\", \"\"], [\"type\", \"button\", \"name\", \"login\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\")(2, \"br\");\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4, \"Login Page!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"br\")(6, \"img\", 1)(7, \"hr\");\n      i0.ɵɵelementStart(8, \"span\", 2);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\")(11, \"div\", 3)(12, \"label\");\n      i0.ɵɵtext(13, \"Username \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 4, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\");\n      i0.ɵɵtext(18, \"Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6, 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 3);\n      i0.ɵɵelement(22, \"label\")(23, \"br\");\n      i0.ɵɵelementStart(24, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(15);\n        const _r1 = i0.ɵɵreference(20);\n        return i0.ɵɵresetView(ctx.validate(_r0, _r1));\n      });\n      i0.ɵɵtext(25, \" Login \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.message);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","httpClient","router","route","message","ngOnInit","validate","pusername","ppassword","reqeuestBody","username","value","password","response","post","subscribe","data","console","log","authorization","sessionStorage","setItem","navigate","error","status","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_button_click_24_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","_r1","ɵɵresetView","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\rabin\\OneDrive\\Desktop\\pranayaAngularProject\\angular2023\\src\\app\\login\\login.component.ts","C:\\Users\\rabin\\OneDrive\\Desktop\\pranayaAngularProject\\angular2023\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AppResponse } from '../app.response.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  message:string=\"\";  \r\n\r\n  public constructor(private httpClient : HttpClient,private router: Router, private route: ActivatedRoute){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  public validate(pusername:any,ppassword:any) : void {\r\n      const reqeuestBody={username:pusername.value,password:ppassword.value};\r\n      //HERE WE ARE MAKING REST CALL\r\n      let response:Observable<AppResponse> = \r\n      this.httpClient.post<AppResponse>(\"http://localhost:8080/v2/auth\",reqeuestBody);\r\n      response.subscribe((data:AppResponse)=>{\r\n          console.log(data);\r\n          if(data.authorization!==null){\r\n           //   localStorage.setItem('Authorization',data.authorization);\r\n\r\n          sessionStorage.setItem('Authorization',data.authorization);\r\n              this.router.navigate(['home']);\r\n          }\r\n      },(error)=>{\r\n         console.log(error);\r\n         if(error.status===401) {\r\n            this.message= \"Hey! username and password is not correct!\";\r\n         }\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <br/><br/>\r\n    <h3>Login Page!</h3>\r\n     <br/>\r\n     <img src=\"https://cdn-icons-png.flaticon.com/512/295/295128.png\" style=\"height: 180px;\">\r\n     <hr/>\r\n     <span style=\"color:red;font-weight: bold;\">{{message}}</span>\r\n    <form>\r\n    <div class=\"form-group\" style=\"width:50%;\">\r\n        <label>Username </label>\r\n        <input #pusername type=\"text\" name=\"username\" class=\"form-control\"/>\r\n     </div>\r\n \r\n     <div class=\"form-group\" style=\"width:50%;\">\r\n       <label>Password </label>\r\n       <input #ppassword type=\"password\" name=\"password\" class=\"form-control\"/>\r\n    </div>\r\n \r\n    <div class=\"form-group\" style=\"width:50%;\">\r\n     <label> </label>\r\n     <br/>\r\n     <button (click)=\"validate(pusername,ppassword);\"  type=\"button\" name=\"login\" class=\"btn btn-primary\">\r\n       Login\r\n      </button> \r\n \r\n  </div>\r\n   </form> \r\n \r\n </div>"],"mappings":";;;;AAWA,OAAM,MAAOA,cAAc;EAGzBC,YAA2BC,UAAuB,EAASC,MAAc,EAAUC,KAAqB;IAA7E,KAAAF,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAFxF,KAAAC,OAAO,GAAQ,EAAE;EAGjB;EAEAC,QAAQA,CAAA,GAER;EAEOC,QAAQA,CAACC,SAAa,EAACC,SAAa;IACvC,MAAMC,YAAY,GAAC;MAACC,QAAQ,EAACH,SAAS,CAACI,KAAK;MAACC,QAAQ,EAACJ,SAAS,CAACG;IAAK,CAAC;IACtE;IACA,IAAIE,QAAQ,GACZ,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAc,+BAA+B,EAACL,YAAY,CAAC;IAC/EI,QAAQ,CAACE,SAAS,CAAEC,IAAgB,IAAG;MACnCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAGA,IAAI,CAACG,aAAa,KAAG,IAAI,EAAC;QAC5B;QAEDC,cAAc,CAACC,OAAO,CAAC,eAAe,EAACL,IAAI,CAACG,aAAa,CAAC;QACtD,IAAI,CAACjB,MAAM,CAACoB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;;IAEtC,CAAC,EAAEC,KAAK,IAAG;MACRN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MAClB,IAAGA,KAAK,CAACC,MAAM,KAAG,GAAG,EAAE;QACpB,IAAI,CAACpB,OAAO,GAAE,4CAA4C;;IAEhE,CAAC,CAAC;EACN;;AA7BWL,cAAc,C;mBAAdA,cAAc,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,cAAA;AAAA;AAAdhC,cAAc,C;QAAdA,cAAc;EAAAiC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCX3Bb,EAAA,CAAAe,cAAA,aAAuB;MACnBf,EAAA,CAAAgB,SAAA,SAAK;MACLhB,EAAA,CAAAe,cAAA,SAAI;MAAAf,EAAA,CAAAiB,MAAA,kBAAW;MAAAjB,EAAA,CAAAkB,YAAA,EAAK;MACnBlB,EAAA,CAAAgB,SAAA,SAAK;MAGLhB,EAAA,CAAAe,cAAA,cAA2C;MAAAf,EAAA,CAAAiB,MAAA,GAAW;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAC9DlB,EAAA,CAAAe,cAAA,YAAM;MAEKf,EAAA,CAAAiB,MAAA,iBAAS;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MACxBlB,EAAA,CAAAgB,SAAA,mBAAoE;MACvEhB,EAAA,CAAAkB,YAAA,EAAM;MAENlB,EAAA,CAAAe,cAAA,cAA2C;MAClCf,EAAA,CAAAiB,MAAA,iBAAS;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MACxBlB,EAAA,CAAAgB,SAAA,mBAAwE;MAC3EhB,EAAA,CAAAkB,YAAA,EAAM;MAENlB,EAAA,CAAAe,cAAA,cAA2C;MAC1Cf,EAAA,CAAAgB,SAAA,aAAgB;MAEhBhB,EAAA,CAAAe,cAAA,iBAAqG;MAA7Ff,EAAA,CAAAmB,UAAA,mBAAAC,iDAAA;QAAApB,EAAA,CAAAqB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAvB,EAAA,CAAAwB,WAAA;QAAA,MAAAC,GAAA,GAAAzB,EAAA,CAAAwB,WAAA;QAAA,OAASxB,EAAA,CAAA0B,WAAA,CAAAZ,GAAA,CAAAjC,QAAA,CAAA0C,GAAA,EAAAE,GAAA,CAA6B;MAAA,EAAE;MAC9CzB,EAAA,CAAAiB,MAAA,eACD;MAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;MAjBiClB,EAAA,CAAA2B,SAAA,GAAW;MAAX3B,EAAA,CAAA4B,iBAAA,CAAAd,GAAA,CAAAnC,OAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}